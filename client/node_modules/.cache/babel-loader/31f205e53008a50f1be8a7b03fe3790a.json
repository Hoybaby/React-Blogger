{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Coding Examples in VS\\\\react-practice2\\\\client\\\\src\\\\Create.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Create = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [author, setAuthor] = useState('mario');\n  const [isPending, setIsPending] = useState(false); //this is an object\n\n  const history = useHistory(); //this has to go backend\n  //\n\n  const addBlog = () => {\n    axios.post('http://localhost:3001/create', {\n      title: title,\n      body: body,\n      author: author\n    }).then(() => {\n      console.log(\"success\");\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const blog = {\n      title,\n      body,\n      author\n    };\n    setIsPending(true); //second arguement is where we tack on the data but also define the type of request we sending.\n\n    fetch('http://localhost:8000/blogs', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      console.log('new blog added');\n      setIsPending(false);\n      history.push('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New blog!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog Title: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog Body: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        required: true,\n        onChange: e => setBody(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Blog Author: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), !isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addBlog,\n        children: \"Add Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        children: \"Adding Blog...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [author, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Create, \"CI5Fwx/WK5O6Ywo/YUs6t3xhT3I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["D:/Coding Examples in VS/react-practice2/client/src/Create.jsx"],"names":["React","useState","useHistory","axios","Create","title","setTitle","body","setBody","author","setAuthor","isPending","setIsPending","history","addBlog","post","then","console","log","handleSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","push","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport {useHistory} from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n\r\nconst Create = () => {\r\n\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] =useState('');\r\n    const [author, setAuthor] = useState('mario');\r\n    const [ isPending, setIsPending] = useState(false)\r\n\r\n    \r\n    //this is an object\r\n    const history = useHistory();\r\n\r\n    //this has to go backend\r\n    //\r\n    const addBlog =() => {\r\n            axios.post('http://localhost:3001/create', \r\n            {title: title,\r\n            body: body,\r\n            author: author\r\n        }).then(()=> {\r\n                console.log(\"success\")\r\n            })\r\n        }\r\n\r\n    const handleSubmit =(e) => {\r\n        e.preventDefault();\r\n\r\n        const blog = {title, body, author};\r\n\r\n        setIsPending(true);\r\n\r\n        //second arguement is where we tack on the data but also define the type of request we sending.\r\n        fetch('http://localhost:8000/blogs', {\r\n        method: 'POST',\r\n        headers: {\"Content-Type\" : \"application/json\"},\r\n        body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log('new blog added');\r\n            setIsPending(false);\r\n            history.push('/')\r\n        })\r\n\r\n    \r\n    }\r\n\r\n    return (\r\n        <div className=\"create\">\r\n            <h2>Add a New blog!</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog Title: </label>\r\n                <input \r\n                type=\"text\"\r\n                required\r\n                value={title}\r\n                onChange={ (e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog Body: </label>\r\n                <textarea \r\n                required\r\n                onChange={ (e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label>Blog Author: </label>\r\n                    <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                    >\r\n                    </input>\r\n                    {!isPending && <button onClick={addBlog}>Add Blog</button>} \r\n                    {isPending && <button disabled>Adding Blog...</button>}\r\n                    <p>{title}</p>\r\n                    <p>{body}</p>\r\n                    <p>{author} </p>\r\n            </form>\r\n        </div>\r\n        );\r\n}\r\n \r\nexport default Create;"]},"metadata":{},"sourceType":"module"}