{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Coding Examples in VS\\\\react-practice2\\\\client\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport BlogList from './BlogList.jsx';\nimport useFetch from './useFetch.js';\n\nfunction Home() {\n  _s();\n\n  // const handleDelete = (id) => {\n  //     //this doesnt change the orginal data, only returns new filtered array.\n  //     //if true, it remains in the array, if false it is removed\n  //     const newBlogs = blogs.filter((blog => blog.id !== id));\n  //     setBlogs(newBlogs);\n  // }\n  const {\n    data: blogs,\n    isLoading,\n    error\n  } = useFetch('http://localhost:8000/blogs');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this), blogs && /*#__PURE__*/_jsxDEV(BlogList, {\n      blogs: blogs,\n      title: \"All Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"UTA0xDI/bH8EfNLSwlUA2haaCGc=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Coding Examples in VS/react-practice2/client/src/Home.js"],"names":["React","useState","useEffect","BlogList","useFetch","Home","data","blogs","isLoading","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ;AAEA;AACA;AACA;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAmCL,QAAQ,CAAC,6BAAD,CAAjD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,eACKK,KAAK,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YADd,EAEKD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlB,EAKKD,KAAK,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,KAAK,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YALd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAvBQF,I;UAUoCD,Q;;;KAVpCC,I;AAyBT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport BlogList from './BlogList.jsx';\r\nimport useFetch from './useFetch.js';\r\n\r\nfunction Home() {\r\n\r\n    // const handleDelete = (id) => {\r\n        \r\n    //     //this doesnt change the orginal data, only returns new filtered array.\r\n    //     //if true, it remains in the array, if false it is removed\r\n    //     const newBlogs = blogs.filter((blog => blog.id !== id));\r\n    //     setBlogs(newBlogs);\r\n    // }\r\n\r\n    const { data: blogs, isLoading, error} = useFetch('http://localhost:8000/blogs')\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n            {isLoading && <div>Loading...</div>}\r\n            \r\n            {/* you can name blogs anything but then inside the curly is the actual PROP which has to be consistent with a variable name */}\r\n            {blogs && <BlogList blogs={blogs} title=\"All Blogs\"/>} \r\n            {/* <button onClick={() => setName('luigi')}>change name</button> */}\r\n            {/* <p>{name}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}