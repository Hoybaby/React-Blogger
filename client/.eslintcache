[{"D:\\Coding Examples in VS\\react-practice2\\client\\src\\index.js":"1","D:\\Coding Examples in VS\\react-practice2\\client\\src\\App.js":"2","D:\\Coding Examples in VS\\react-practice2\\client\\src\\Navbar.js":"3","D:\\Coding Examples in VS\\react-practice2\\client\\src\\Home.js":"4","D:\\Coding Examples in VS\\react-practice2\\client\\src\\BlogDetails.js":"5","D:\\Coding Examples in VS\\react-practice2\\client\\src\\Create.jsx":"6","D:\\Coding Examples in VS\\react-practice2\\client\\src\\useFetch.js":"7","D:\\Coding Examples in VS\\react-practice2\\client\\src\\BlogList.jsx":"8"},{"size":434,"mtime":1610087313601,"results":"9","hashOfConfig":"10"},{"size":795,"mtime":1614281173170,"results":"11","hashOfConfig":"10"},{"size":513,"mtime":1614018668423,"results":"12","hashOfConfig":"10"},{"size":1091,"mtime":1614018671680,"results":"13","hashOfConfig":"10"},{"size":1239,"mtime":1614631956546,"results":"14","hashOfConfig":"10"},{"size":2494,"mtime":1614964362029,"results":"15","hashOfConfig":"10"},{"size":1422,"mtime":1614313006438,"results":"16","hashOfConfig":"10"},{"size":710,"mtime":1614282730593,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1s9m8ue",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Coding Examples in VS\\react-practice2\\client\\src\\index.js",[],["38","39"],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\App.js",[],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\Navbar.js",[],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\Home.js",["40","41"],"import React, { useState, useEffect } from 'react'\r\nimport BlogList from './BlogList.jsx';\r\nimport useFetch from './useFetch.js';\r\n\r\nfunction Home() {\r\n\r\n    // const handleDelete = (id) => {\r\n        \r\n    //     //this doesnt change the orginal data, only returns new filtered array.\r\n    //     //if true, it remains in the array, if false it is removed\r\n    //     const newBlogs = blogs.filter((blog => blog.id !== id));\r\n    //     setBlogs(newBlogs);\r\n    // }\r\n\r\n    const { data: blogs, isLoading, error} = useFetch('http://localhost:8000/blogs')\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n            {isLoading && <div>Loading...</div>}\r\n            \r\n            {/* you can name blogs anything but then inside the curly is the actual PROP which has to be consistent with a variable name */}\r\n            {blogs && <BlogList blogs={blogs} title=\"All Blogs\"/>} \r\n            {/* <button onClick={() => setName('luigi')}>change name</button> */}\r\n            {/* <p>{name}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","D:\\Coding Examples in VS\\react-practice2\\client\\src\\BlogDetails.js",[],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\Create.jsx",[],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\useFetch.js",["42"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (url) => {\r\n\r\n    //changed blogs to data so it can be reusable later\r\n    const [data, setData] = useState (null);\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, {signal:abortCont.signal}) //this will return a promise so i can then do\r\n            .then(res => {\r\n                console.log(res);\r\n                if(!res.ok) {\r\n                    throw Error('could not fetch the data. bad endpoint')\r\n                }\r\n                return res.json() //this passes a json into an JS object for us\r\n            })\r\n            .then((data)=> { //data could be named anything. nothing to do with the blog file\r\n                console.log(data);\r\n                setData(data);\r\n                setisLoading(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.message);\r\n                setError(err.message);\r\n                setisLoading(false);\r\n            })\r\n\r\n            return() => abortCont.abort();\r\n    }, [url]);\r\n\r\n    //this returns 3 values, the data we are trying to fetch, the value if true or false and an error if there is one.\r\n    return { data, isLoading, error}\r\n}\r\n\r\nexport default useFetch;\r\n",["43","44"],"D:\\Coding Examples in VS\\react-practice2\\client\\src\\BlogList.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"54","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"45","replacedBy":"55"},{"ruleId":"47","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'React' is defined but never used.",["57"],["58"],"no-global-assign","no-unsafe-negation"]