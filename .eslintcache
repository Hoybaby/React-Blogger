[{"D:\\Coding Examples in VS\\react-practice2\\src\\index.js":"1","D:\\Coding Examples in VS\\react-practice2\\src\\App.js":"2","D:\\Coding Examples in VS\\react-practice2\\src\\Navbar.js":"3","D:\\Coding Examples in VS\\react-practice2\\src\\Home.js":"4","D:\\Coding Examples in VS\\react-practice2\\src\\BlogList.jsx":"5","D:\\Coding Examples in VS\\react-practice2\\src\\useFetch.js":"6","D:\\Coding Examples in VS\\react-practice2\\src\\Create.jsx":"7"},{"size":434,"mtime":1610087313601,"results":"8","hashOfConfig":"9"},{"size":660,"mtime":1611948743660,"results":"10","hashOfConfig":"9"},{"size":461,"mtime":1611678823566,"results":"11","hashOfConfig":"9"},{"size":1077,"mtime":1611903101874,"results":"12","hashOfConfig":"9"},{"size":578,"mtime":1611898584112,"results":"13","hashOfConfig":"9"},{"size":1177,"mtime":1611903178809,"results":"14","hashOfConfig":"9"},{"size":196,"mtime":1611948757634,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"f2rjbn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding Examples in VS\\react-practice2\\src\\index.js",[],["33","34"],"D:\\Coding Examples in VS\\react-practice2\\src\\App.js",[],"D:\\Coding Examples in VS\\react-practice2\\src\\Navbar.js",[],"D:\\Coding Examples in VS\\react-practice2\\src\\Home.js",["35","36"],"import React, { useState, useEffect } from 'react'\r\nimport BlogList from './BlogList.jsx';\r\nimport useFetch from './useFetch.js';\r\n\r\nfunction Home() {\r\n\r\n    // const handleDelete = (id) => {\r\n        \r\n    //     //this doesnt change the orginal data, only returns new filtered array.\r\n    //     //if true, it remains in the array, if false it is removed\r\n    //     const newBlogs = blogs.filter((blog => blog.id !== id));\r\n    //     setBlogs(newBlogs);\r\n    // }\r\n\r\n    const { data: blogs, isLoading, error} = useFetch('http://localhost:8000/blogs')\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n            {isLoading && <div>Loading...</div>}\r\n            {/* you can name blogs anything but then inside the curly is the actual PROP which has to be consistent with a variable name */}\r\n            {blogs && <BlogList blogs={blogs} title=\"All Blogs\"/>} \r\n            {/* <button onClick={() => setName('luigi')}>change name</button> */}\r\n            {/* <p>{name}</p> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","D:\\Coding Examples in VS\\react-practice2\\src\\BlogList.jsx",[],"D:\\Coding Examples in VS\\react-practice2\\src\\useFetch.js",["37"],"import React, { useState, useEffect } from 'react'\r\n\r\nconst useFetch = (url) => {\r\n\r\n    //changed blogs to data so it can be reusable later\r\n    const [data, setData] = useState (null);\r\n    const [isLoading, setisLoading] = useState(true);\r\n    const [error, setError] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(url) //this will return a promise so i can then do\r\n            .then(res => {\r\n                console.log(res);\r\n                if(!res.ok) {\r\n                    throw Error('could not fetch the data. bad endpoint')\r\n                }\r\n                return res.json() //this passes a json into an JS object for us\r\n            })\r\n            .then((data)=> { //data could be named anything. nothing to do with the blog file\r\n                console.log(data);\r\n                setData(data);\r\n                setisLoading(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                // console.log(err.message);\r\n                setError(err.message);\r\n                setisLoading(false);\r\n            })\r\n    }, [url]);\r\n\r\n\r\n    return { data, isLoading, error}\r\n}\r\n\r\nexport default useFetch;\r\n","D:\\Coding Examples in VS\\react-practice2\\src\\Create.jsx",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"42","severity":1,"message":"47","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]